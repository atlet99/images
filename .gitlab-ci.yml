stages:
  - build
  - push

variables:
  DOCKER_CONFIG: /kaniko/.docker
  IMAGE_REGISTRY: $CI_REGISTRY
  IMAGE_TAG: stable
  CACHE_TTL: 1d

default:
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2
    entrypoint: [""]
  interruptible: true
  retry:
    max: 2
    when:
      - runner_system_failure
      - api_failure
  tags:
    - nodb
  timeout: 15m
  before_script:
    - echo "{\"auths\":{\"$IMAGE_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > $DOCKER_CONFIG/config.json

mr_build_images:
  stage: build
  script:
    - |
      for DOCKERFILE in $(find . -type f -name '*.Dockerfile'); do
        IMAGE_NAME=$(basename "$DOCKERFILE" | sed 's/\.Dockerfile$//')
        CONTEXT_PATH=$(dirname "$DOCKERFILE")
        FULL_IMAGE="$IMAGE_REGISTRY/$IMAGE_NAME:mr-$CI_COMMIT_SHORT_SHA"
        echo "Building and pushing temporary image: $FULL_IMAGE"
        /kaniko/executor \
          --context "$CONTEXT_PATH" \
          --dockerfile "$DOCKERFILE" \
          --destination "$FULL_IMAGE" \
          --cache=true \
          --cache-ttl $CACHE_TTL \
          --ttl 30m
      done
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

build_and_push:
  stage: push
  script:
    - |
      for DOCKERFILE in $(find . -type f -name '*.Dockerfile'); do
        IMAGE_NAME=$(basename "$DOCKERFILE" | sed 's/\.Dockerfile$//')
        CONTEXT_PATH=$(dirname "$DOCKERFILE")
        FULL_IMAGE="$IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
        echo "Building and pushing image: $FULL_IMAGE"
        /kaniko/executor \
          --context "$CONTEXT_PATH" \
          --dockerfile "$DOCKERFILE" \
          --destination "$FULL_IMAGE" \
          --cache=true \
          --cache-ttl $CACHE_TTL
      done
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      when: always