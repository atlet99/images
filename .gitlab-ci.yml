stages:
  - build
  - push

variables:
  IMAGE_TAG: stable
  CACHE_TTL: 24h

default:
  interruptible: true
  retry:
    max: 2
    when:
      - runner_system_failure
      - api_failure
  tags:
    - nodb
  timeout: 15m
before_script:
  - mkdir -p /kaniko/.docker
  - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  - |
    if [ -n "$DOCKERHUB_USERNAME" ] && [ -n "$DOCKERHUB_PASSWORD" ]; then
      echo "Adding DockerHub credentials to Kaniko..."
      echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_AUTH_CONFIG\"}}}" >> /kaniko/.docker/config.json
    else
      echo "Warning: DockerHub credentials are not set. Skipping DockerHub authentication."
    fi

.build_template: &build_template
  image:
    name: gcr.io/kaniko-project/executor:v1.23.1-debug
    entrypoint: [ "" ]
  script:
    - |
      FULL_IMAGE="$CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"
      echo "Building and pushing image: $FULL_IMAGE"
      /kaniko/executor \
        --context "$CONTEXT_PATH" \
        --dockerfile "$DOCKERFILE_PATH" \
        --destination "$FULL_IMAGE"

push_ansible_image_stable:
  <<: *build_template
  stage: push
  variables:
    IMAGE_NAME: "ansible"
    CONTEXT_PATH: "$CI_PROJECT_DIR"
    DOCKERFILE_PATH: "$CI_PROJECT_DIR/ansible.Dockerfile"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      when: always

push_deployer_image_stable:
  <<: *build_template
  stage: push
  variables:
    IMAGE_NAME: "deployer"
    CONTEXT_PATH: "$CI_PROJECT_DIR"
    DOCKERFILE_PATH: "$CI_PROJECT_DIR/deployer.Dockerfile"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      when: always

push_kaniko_image_stable:
  <<: *build_template
  stage: push
  variables:
    IMAGE_NAME: "kaniko"
    CONTEXT_PATH: "$CI_PROJECT_DIR"
    DOCKERFILE_PATH: "$CI_PROJECT_DIR/kaniko.Dockerfile"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      when: always